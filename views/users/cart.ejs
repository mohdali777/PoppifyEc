<%- include('../partials/user/header') %>
<%- include('../partials/user/navbar') %>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<div class="container">
    <h2 class="text-center mb-4">Shopping Cart</h2>
    <!-- Product Table -->
    <div class="table-responsive">
        <table class="table table-bordered align-middle text-center">
            <thead class="table-light">
                <tr>
                    <th>Product</th>
                    <th>Variant</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Subtotal</th>
                    <th>Action</th> <!-- New column for delete icon -->
                </tr>
            </thead>
            <tbody>
                <% cart.items.forEach(item => { %>
                    <tr>
                        <td class="d-flex align-items-center">
                            <img style="width: 40px; height: 40px;" src="/uploads/<%= item.productId.image[0] %>" alt="<%= item.productId.name %>" class="me-2">
                            <span><%= item.productId.name %></span>
                        </td>
                        <td>$<%= item.variant %></td>
                        <td>$<%= item.price %></td>
                        <td>
                            <input 
                                type="number" 
                                class="form-control mx-auto quantity-input" 
                                value="<%= item.quantity %>" 
                                min="1" 
                                id="cart-quantity-<%= item.productId._id %>"  
                                onchange="updateCart('<%= item.productId._id %>', '<%= item.totalquantity %>')" 
                                style="width: 60px;">
                        </td>
                        
                        <td>$<%= item.total %></td>
                        <td>
                            <button class="btn btn-black btn-sm" onclick="deleteCartItem('<%= item.productId._id %>')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td> <!-- Delete button -->
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
    
    <!-- Cart Total -->
    <div class="row justify-content-end">
        <div class="col-md-4 cart-total">
            <h5>Cart Total</h5>
            <hr>
            <p class="d-flex justify-content-between">
                <span>Subtotal:</span>
                <span>$<%= cart.totalPrice %></span>
            </p>
            <p class="d-flex justify-content-between">
                <span>Shipping:</span>
                <span>Free</span>
            </p>
            <hr>
            <p class="d-flex justify-content-between fw-bold">
                <span>Total:</span>
                <span>$<%= cart.totalPrice %></span>
            </p>
            <a href="#" class="btn btn-checkout w-100 text-uppercase" style=" background-color: #dc3545; color: white; font-weight: bold;" onclick="proceedtoPayment()">Proceed to Checkout</a>
        </div>
    </div>
</div>

<script>
function updateCart(productId,totalquantity) {
    const inputElement = document.getElementById(`cart-quantity-${productId}`);
    const quantity = parseInt(inputElement.value);

    if (quantity < 1) {
        alert('Quantity must be at least 1.');
        return;
    }
    if (quantity > totalquantity) {
        alert(`You can only add up to ${totalquantity} items.`);
        inputElement.value = totalquantity; // Reset to max allowable quantity
        inputElement.disabled = true; // Disable input field
        setTimeout(() => {
            inputElement.disabled = false; // Re-enable input after a delay
        }, 2000); // Re-enable after 2 seconds (adjust as needed)
        return;
        return;
    }

    fetch('/update-cart', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId, quantity }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Cart updated successfully!');
            location.reload(); // Reload the page to reflect updated cart
        } else {
            alert('Failed to update cart.');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Something went wrong.');
    });
}

function deleteCartItem(productId) {
    if (!confirm('Are you sure you want to remove this item from the cart?')) {
        return;
    }

    fetch('/delete-cart-item', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Item removed from cart successfully!');
            location.reload(); // Reload the page to reflect updated cart
        } else {
            alert(data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Something went wrong.');
    });
}
function proceedtoPayment (){
    fetch("/check-out",{method:"GET"}).then((response)=>{
if(response.ok) window.location.href = "/check-out"
    }).catch((err)=>{
console.log(err);

    })
}
</script>

<%- include('../partials/user/footer') %>
