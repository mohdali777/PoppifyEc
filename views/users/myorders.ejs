<%- include('../partials/user/header') %>
<%- include('../partials/user/navbar') %>
<style>
    .pagination {
    display: flex;
    justify-content: center;
    margin-top: 20px;
}

.page-btn {
    margin: 0 5px;
    padding: 8px 16px;
    border: 1px solid #ccc;
    background-color: #f9f9f9;
    cursor: pointer;
    border-radius: 4px;
    font-size: 14px;
}

.page-btn.active {
    background-color: #007bff;
    color: white;
    border-color: #007bff;
}
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

<div class="container-order-page">
    <h2 class="heading-order-page">My Orders</h2>
    <p class="order-info-order-page">You have <%= orders.length %> items in your order</p>

    <% orders.forEach(order => { %>
    <div class="order-card-order-page">
        <div class="order-details-order-page">
            <h3>Order Id: <%= order.orderId%></h3>
            <h3><%= order.createdAt %></h3>
            <p>Order Total: <strong>₹<%= order.totalPrice %></strong></p>
            <p>Payment Method: <strong><%= order.paymentMethod %></strong></p>
            <p>OrderStatus: <span class="<%= order.orderStatus.toLowerCase() %>-order-page"><%= order.orderStatus %></span></p>
            <div style="display: flex;">
            <p>PaymentStatus: <span class="<%= order.orderStatus.toLowerCase() %>-order-page"><%= order.paymentStatus %></span></p>
            <% if (order.paymentStatus.toLowerCase() === 'pending' || order.paymentStatus === "Failed") { %>
              <button 
                  class="btn btn-danger" 
                  style="margin:-2px 20px; padding: 8px 12px; font-size: 1rem; font-weight: bold; border: none; border-radius: 4px;"
                  onclick="showPaymentSection('<%= order._id %>')"
              >
                  Try Again Payment
              </button>

              <div class="col-lg-4 col-md-12" id="paymentMethodTry-<%= order._id %>" style=" display: none; position: absolute; right: 500px;">
                <div class="card p-4 shadow-sm">
                  <span id="closeModalRepay"  onclick="closePaymentSection('<%= order._id %>')" style="color:#aaa; position:absolute; top:10px; right:15px; font-size:24px; cursor:pointer;">&times;</span>

                    <h4 class="mb-4" style="font-size: 1.8rem; font-weight: bold;">Payment Details</h4>
                    <ul class="list-unstyled">
                        <!-- Dummy cart items -->
                        <li class="d-flex justify-content-between mb-2">
                          <span style="font-size: 1.2rem;">Productname</span>
                          <span style="font-size: 1.2rem; margin-left: -43px;">Quantity</span>
                          <strong style="font-size: 1.2rem;">Price</strong>
                      </li>
                        <% order.cartItems.forEach(item => { %>
                        <li class="d-flex justify-content-between mb-2">
                            <span style="font-size: 1.2rem;"><%= item.productName %></span>
                            <span style="font-size: 1.2rem;"><%= item.quantity %></span>
                            <strong style="font-size: 1.2rem;"><%= item.price %></strong>
                        </li>
                       <% })%>
            
        
                        
                        <hr>
                        <li class="d-flex justify-content-between mb-3">
                            <strong style="font-size: 1.2rem;">Total</strong>
                            <strong style="font-size: 1.2rem;" id="totalPrice1">₹<%= order.totalPrice %></strong>
                        </li>
                    </ul>
            
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="razorpay" checked>
                            <label class="form-check-label" for="razorpay" style="font-size: 1.2rem;">Razorpay</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="wallet">
                            <label class="form-check-label" for="wallet" style="font-size: 1.2rem;">Wallet</label>
                        </div>
                    </div>
                    <button class="btn btn-danger w-100" style="font-size: 1.2rem; height: 45px;" onclick="placeorder('<%= order._id %>','<%= order.totalPrice %>')">Place Order</button>
      
                </div>
            </div>
          <% } %>
        </div>
        </div>
   

        
      
        
        

 
        <button class="btn-order-page" style="background-color: black; " onclick="toggleBillingAddress('<%= order._id %>')">Show Billing Address</button>
        <br>
  
        <div id="billing-address-<%= order._id %>" class="billing-address-order-page" 
            style="font-family: Arial, sans-serif; padding: 15px; background-color: #f9f9f9; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); display: none; margin-top: 15px;">
           <h4 style="font-size: 20px; margin-bottom: 12px; color: #333; font-weight: bold;">Billing Address</h4>
           <div style="display: flex; flex-direction: column; gap: 10px;">
               <p style="font-size: 14px; color: #555; margin: 0;"><strong>First Name:</strong> <%= order.address?.firstName %></p>
               <p style="font-size: 14px; color: #555; margin: 0;"><strong>Company Name:</strong> <%= order.address?.companyName %></p>
               <p style="font-size: 14px; color: #555; margin: 0;"><strong>Street Address:</strong> <%= order.address?.streetAddress %></p>
               <p style="font-size: 14px; color: #555; margin: 0;"><strong>Apartment:</strong> <%= order.address?.apartment %></p>
               <p style="font-size: 14px; color: #555; margin: 0;"><strong>City:</strong> <%= order.address?.city %></p>
               <p style="font-size: 14px; color: #555; margin: 0;"><strong>Phone:</strong> <%= order.address?.phone %></p>
               <p style="font-size: 14px; color: #555; margin: 0;"><strong>Email:</strong> <%= order.address?.email %></p>
           </div>
       </div>
       


        <!-- Action Buttons -->
        <div class="order-actions-order-page">
            <% if (order.orderStatus === 'Pending' || order.orderStatus === 'Processing') { %>
                <button class="btn-order-page btn-cancel-order-page" onclick="handleCancel('<%= order._id %>')">Cancel Order</button>
            <% } %>
            <button class="btn-order-page btn-view-products-order-page" onclick="toggleProducts(this)">View Products</button>
        </div>

        <!-- Products Container (Initially Hidden) -->
        <div class="products-container-order-page" style="border: 2px solid black;">
            <% order.cartItems.forEach(item => { %>
            <div class="product-card-order-page">
                <img  src="/uploads/<%= item.productImage || 'placeholder.jpg' %>" 
                     alt="<%= item.productId.name || 'Product' %>" />
                <div class="product-details-order-page" >
                    <h4><a href="" onclick="productdeatails('<%= item.productId._id %>','<%= item.productId.category %>')" style="text-decoration: none; color: black;" ><%= item.productName %></a></h4>
                    <p style="font-size: 1rem; color: #555; margin: 5px 0;">
                      Quantity: <%= item.quantity %> - ₹<%= item.price %> per unit
                  </p>
                  <p style="font-size: 1rem; color: #555; margin: 5px 0;">
                      Total: ₹<%= item.total %>
                  </p>
                  

                    <% if (item.status) { %>
                      <p><strong>Return Status:</strong> <%= item.status %></p>
                    <% } else { %>
                      <p><strong>Return Status:</strong> Not Requested</p>
                    <% } %>

                    <!-- Return Button for Each Product -->
                    <% if (order.orderStatus === 'Delivered' || order.orderStatus === 'Returned') { %>
                      <% if (item.status == null) { %>
                        <!-- Show return button if status is 'Pending' -->
                        <button class="btn-order-page btn-return-product-page" style="background-color: green;" onclick="handleReturn('<%= order._id %>', '<%= item.productId._id %>','<%= item._id %>')">Return Product</button>
                      <% } else { %>
                        <!-- Disable return button if status is not 'Pending' -->
                        <button class="btn-order-page btn-return-product-page" style="background-color: grey;" disabled>Returned</button>
                      <% } %>
                    <% } %>
                </div>
            </div>
            <% }); %>
        </div>
    </div>
    <% }); %>
</div>

<div id="returnModal" style="display:none; position:fixed; z-index:1000; left:0; top:0; width:100%; height:100%; background-color:rgba(0,0,0,0.5);">
  <div style="background-color:#fff; margin:10% auto; padding:20px; border-radius:8px; width:40%; text-align:center; position:relative;">
    <!-- Close Button -->
    <span id="closeModal" style="color:#aaa; position:absolute; top:10px; right:15px; font-size:24px; cursor:pointer;">&times;</span>
    <h2>Return Product</h2>
    <p style="margin-bottom: 10px;">Please provide a reason for returning the product:</p>
    <!-- Textarea -->
    <textarea id="returnReason" style="width:90%; margin:10px 0; padding:10px; font-size:16px; border-radius:4px; border:1px solid #ccc;" rows="4"></textarea>
    <!-- Submit Button -->
    <button id="submitReturn" style="background-color:#4CAF50; color:white; border:none; padding:10px 20px; border-radius:4px; cursor:pointer;">
      Submit
    </button>
  </div>
</div>

<div class="pagination">
  <% if (currentPage > 1) { %>
    <a href="/myorders?page=<%= currentPage - 1 %>" class="page-btn">Previous</a>
  <% } %>
  <% for (let i = 1; i <= totalPages; i++) { %>
    <a href="/myorders?page=<%= i %>" class="page-btn <%= i === currentPage ? 'active' : '' %>"><%= i %></a>
  <% } %>
  <% if (currentPage < totalPages) { %>
    <a href="/myorders?page=<%= currentPage + 1 %>" class="page-btn">Next</a>
  <% } %>
</div>


<script>


function showPaymentSection(orderId) {
 
    document.getElementById(`paymentMethodTry-${orderId}`).style.display = 'block';
 
    
}

function closePaymentSection(orderId) {
    document.getElementById(`paymentMethodTry-${orderId}`).style.display = 'none';
}

    function toggleProducts(button) {
        const productsContainer = button.closest('.order-card-order-page').querySelector('.products-container-order-page');
        productsContainer.classList.toggle('active');
        button.textContent = productsContainer.classList.contains('active') ? "Hide Products" : "View Products";
    }

    function toggleBillingAddress(orderId) {
        const billingAddress = document.getElementById(`billing-address-${orderId}`);
        const isHidden = billingAddress.style.display === 'none';
        billingAddress.style.display = isHidden ? 'block' : 'none';
    }

  
    async function handleCancel(orderId) {
  const willCancel = await swal({
    title: "Are you sure?",
    text: "Do you want to cancel this order? This action cannot be undone.",
    icon: "warning",
    buttons: ["No, Keep It", "Yes, Cancel It"], 
    dangerMode: true, 
  });

  if (willCancel) {
    try {
      const response = await fetch(`/orders-cancel/${orderId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
      });

      if (response.ok) {
        const result = await response.json();
        swal({
          title: "Order Canceled!",
          text: result.message || "Your order has been successfully canceled.",
          icon: "success",
          button: "OK",
        }).then(() => {
          window.location.reload();
        });
      } else {
        swal({
          title: "Error!",
          text: "Failed to cancel the order. Please try again.",
          icon: "error",
          button: "OK",
        });
      }
    } catch (err) {
      console.error("Error canceling order:", err);
      swal({
        title: "Error!",
        text: "Something went wrong. Please try again.",
        icon: "error",
        button: "OK",
      });
    }
  } else {
    swal("Cancelled", "Your order is safe.", "info");
  }
}
function productdeatails (productId,category){
  fetch(`/productdeatails/${productId}/${category}`,{method:"GET"}).then((response)=>{
 if(response.ok) window.location.href = `/productdeatails/${productId}/${category}`
  }).catch((err)=>{
console.log(err);
  })
      }




  submitBtn.onclick = async function () {
    const reason = returnReasonInput.value.trim();
    if (!reason) {
      swal({
                title: "Attention!",
                text: "Please provide a reason for the return.",
                icon: "warning", // Use the warning icon
                button: "OK",    // Customize the button text
            });
      return;
    }
  }
  async function handleReturn(orderId, productId,itemId) {
  const modal = document.getElementById('returnModal');
  const closeBtn = document.getElementById('closeModal');
  const returnReasonInput = document.getElementById('returnReason');
  const submitBtn = document.getElementById('submitReturn');
  closeBtn.onclick = function () {
    modal.style.display = 'none';
  };
  modal.style.display = 'block';
  submitBtn.onclick = async function () {
    const reason = returnReasonInput.value.trim();
    if (!reason) {
      swal({
                title: "Attention!",
                text: "Please provide a reason for the return.",
                icon: "warning", // Use the warning icon
                button: "OK",    // Customize the button text
            });
      return;  
    }

    try {
      const response = await fetch(`/orders/${orderId}/return/${productId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ reason ,itemId})  
      });
      const result = await response.json();
      if (result.success) {
        swal({
                title: "Notification",
                text: result.message,
                icon: "info", 
                button: "OK", 
            }); 
        location.reload();  
      } else {
        swal({
                title: "Error!",
                text: "Failed to return the product. Please try again.",
                icon: "error", // Use the error icon for failure messages
                button: "OK",  // Customize the button text
            });
      }
    } catch (error) {
      console.error(error);
      swal({
                title: "Error!",
                text: "An error occurred while processing your return.",
                icon: "error", // Error icon
                button: "OK",  // Button text
            });
    }
    modal.style.display = 'none';
  };
}

function placeorder(orderId, totalPrice) {
    // Get the selected payment method
    const rozer = document.getElementById("razorpay").checked;
    const wallet = document.getElementById("wallet").checked;

    // Determine the payment method
    const paymentMethod = rozer
        ? "RazorPay"
        : wallet
        ? "Wallet"
        : null;

    // Ensure a payment method is selected
    if (!paymentMethod) {
        swal("Error", "Please select a payment method.", "error");
        return;
    }

    // Prepare the order details
    const orderDetails = {
        paymentMethod,
        totalPrice: parseFloat(totalPrice), // Convert to number
        orderId,
    };

    // Send the request to the server
    fetch('/repay-order', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(orderDetails),
    })
        .then(async (response) => {
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.message || "Failed to place the order");
            }
            return response.json(); // Parse the response JSON
        })
        .then((data) => {
          if (orderDetails.paymentMethod === "RazorPay" && data.razorpayOrderId) {
                  console.log('enterrazorpay');    
            initializeRazorpay(data.razorpayOrderId, orderDetails.totalPrice, data.keyId,orderDetails);
          }else{
            swal("Success", "Order placed successfully!", "success")
            setTimeout(()=>{
                  window.location.href = `/succes-page/${data.orderid}`
            },1000)
            
          }
        })
        .catch((error) => {
            
            console.error("Error placing order:", error.message);
            swal("Error", error.message, "error");
        });
}

function initializeRazorpay(razorpayOrderId, amount, keyId, orderDetails) {
    console.log("Initializing Razorpay...");
    console.log("Razorpay Order ID:", razorpayOrderId);
    console.log("Order Details:", orderDetails);

    const options = {
        key: keyId, 
        amount: Math.round(amount * 100), // Convert to paisa
        currency: "INR",
        name: "Poppify",
        description: "Order Payment",
        order_id: razorpayOrderId,
        handler: function (response) {
            console.log("Payment successful response:", response);
            verifyPayment(response, razorpayOrderId, orderDetails);
        },
        prefill: {
            name: "first name",
            email:" orderDetails.email",
            contact: "orderDetails.phone",
        },
        theme: {
            color: "#3399cc",
        },
    };

    const razorpay = new Razorpay(options);
    razorpay.open();
}

function verifyPayment(response, razorpayOrderId, orderDetails) {
    console.log("Verifying Payment...");
    console.log("Response:", response);

    fetch('/verify-payment', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            razorpayOrderId: razorpayOrderId,
            razorpayPaymentId: response.razorpay_payment_id,
            razorpaySignature: response.razorpay_signature,
            type:"repay"
        }),
    })
        .then(res => res.json())
        .then(data => {
            console.log("Payment verification data:", data);
            if (data.success) {
                swal({
                    title: "Payment Successful",
                    text: "Your order has been placed successfully!",
                    icon: "success",
                    button: "OK",
                });
                
                if(data.orderId){
            setTimeout(()=>{
                  window.location.href = `/succes-page/${data.orderId}`
            },1000)
            
          }
            } else {
                swal({
                    title: "Payment Failed",
                    text: data.message,
                    icon: "error",
                    button: "OK",
                });
            }
        })
        .catch(err => {
            console.error("Payment verification failed:", err);
            alert("Failed to verify payment. Please contact support.");
        });
}


</script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<%- include('../partials/user/footer') %>
