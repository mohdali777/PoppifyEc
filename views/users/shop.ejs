<%- include('../partials/user/header') %>
<%- include('../partials/user/navbar') %>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
<link href="https://cdn.jsdelivr.net/npm/izitoast/dist/css/iziToast.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>

<style>
    .filter-sort-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding: 10px 20px;
        border-radius: 5px;
        margin-top: 20px;
        gap: 20px;
    }

    .filter-section, .search-section, .sort-section {
        display: flex;
        flex-direction: column;
        margin-left: 20px;
        gap: 10px;
    }

    .filter-section h3, .search-section h3, .sort-section h3 {
        margin: 0 0 10px 0;
        font-size: 1.2rem;
    }

    .filter-section select, .sort-section select, .search-section input {
        padding: 10px;
        border-radius: 4px;
        border: 1px solid #ccc;
        font-size: 1rem;
        width: 100%;
        box-sizing: border-box;
    }
    .search-section h3{
        margin-left: 60px;
    }

    .product-list {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
    }

    .product-item {
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
        text-align: center;
        background-color: #fff;
    }

    .product-item h4 {
        margin: 0 0 10px 0;
    }

    .product-item p {
        margin: 5px 0;
        font-size: 0.9rem;
    }

    #searchInput {
        width: 300px;
        margin-left: 60px;
    }

    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .pagination button {
        padding: 10px;
        margin: 0 5px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .pagination button:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }
    .sort-section{
        margin-left: 600px;
    }
 
    
</style>

<div class="filter-sort-container">
    <!-- Search Section -->
    <div class="search-section">
        <h3>Search</h3>
        <input 
            type="text" 
            id="searchInput" 
            placeholder="Search products..." 
            onkeyup="applyFilters()" 
        />
    </div>

    <!-- Sorting Section -->
    <div class="sort-section">
        <h3 >Sort By</h3>
        <select id="sortOptions" onchange="applyFilters()">
            <option value="popularity">Popularity</option>
            <option value="priceLowToHigh">Price: Low to High</option>
            <option value="priceHighToLow">Price: High to Low</option>
            <option value="averageRatings">Average Ratings</option>
            <option value="featured">Featured</option>
            <option value="newArrivals">New Arrivals</option>
            <option value="aToZ">A - Z</option>
            <option value="zToA">Z - A</option>
        </select>
    </div>

    <!-- Category Filter Section -->
    <div class="filter-section">
        <h3>Category</h3>
        <select id="categoryFilter" onchange="applyFilters()">
            <option value="">All Categories</option>
            <% categories.forEach(category => { %>
                <option value="<%= category.name %>"><%= category.name %></option>
            <% }) %>
        </select>
    </div>


    <div class="filter-section">
        <h3>Variant Range</h3>
        <select id="variantFilter" onchange="applyFilters()">
            <option value="">All Variants</option>
            <option value="128GB">128GB</option>
            <option value="256GB">256GB</option>
            <option value="518GB">518Gb</option>
            <option value="816GB">816GB</option>
            <option value="1TB">1TB</option>
        </select>
    </div>
    <!-- Price Filter Section -->
    <div class="filter-section">
        <h3>Price Range</h3>
        <select id="priceFilter" onchange="applyFilters()">
            <option value="">All Prices</option>
            <option value="0-1000">₹0 - ₹1,000</option>
            <option value="1001-5000">₹1,001 - ₹5,000</option>
            <option value="5001-10000">₹5,001 - ₹10,000</option>
            <option value="10001-50000">₹10,001 - ₹50,000</option>
            <option value="50001-100000">₹50,001 - ₹1,00,000</option>
            <option value="100000-200000">₹1,00,000 - ₹2,00,000</option>
        </select>
    </div>

    <!-- Variant Filter Section -->
</div>


<div class="container py-5">
    <div class="row row-cols-1 row-cols-md-4 g-4" id="productList">
        <!-- Products will be dynamically inserted here -->
    </div>

    <!-- Pagination Controls -->
    <div class="pagination" id="paginationControls">
        <button id="prevPage" onclick="changePage('prev')" disabled>Previous</button>
        <button id="nextPage" onclick="changePage('next')">Next</button>
    </div>
</div>

<script>
    let currentPage = 1;
    const productsPerPage = 8;

   
    function applyFilters() {
        const searchValue = document.getElementById('searchInput').value.toLowerCase();
        const sortValue = document.getElementById('sortOptions').value;
        const categoryValue = document.getElementById('categoryFilter').value;
        const variantValue = document.getElementById("variantFilter").value;
        const priceValue = document.getElementById('priceFilter').value;

        const url = `/products-shop?sort=${sortValue}&search=${searchValue}&category=${categoryValue}&variant=${variantValue}&price=${priceValue}&page=${currentPage}&limit=${productsPerPage}`;
        
        fetch(url)
            .then(response => response.json())
            .then(data => {
                const productList = document.getElementById('productList');
                const paginationControls = document.getElementById('paginationControls');

                if (data.products.length === 0) {
                productList.innerHTML = '<p>No products found matching the criteria.</p>';
                paginationControls.style.display = 'none'; // Hide pagination controls
                return; // Exit early
            }

                productList.innerHTML = '';  // Clear the current product list
                data.products.forEach(product => {
                    const productItem = document.createElement('div');
                    productItem.classList.add('col', 'product-item');
                    productItem.innerHTML = `
                        <div class="card shadow-sm position-relative" style="width: 270px; height: 350px; border-radius: 10px;">
                            <div class="badge bg-danger text-white position-absolute top-0 start-0 m-2" style="width: 40px; height: 20px; font-size: 11px;">
                                -10%
                            </div>
                            <div class="p-3" style="background-color: #F5F5F5; display: flex; justify-content: center; align-items: center; height: 240px;">
                                <img class="card-img-top" src="/uploads/${product.image[0]}" alt="${product.name}" style="width: 172px; height: 152px; object-fit: contain;" onclick="productDetails('${product._id}', '${product.category}')">
                            </div>
                            <div class="position-absolute top-0 end-0 m-2 d-flex flex-column gap-2">
                               <button 
              class="btn btn-sm rounded-circle shadow-sm ${product.WishListVerification ? 'btn-danger' : 'btn-light'}" 
              style="width: 34px; height: 34px;" 
              id="wishlist-${product._id}" 
              onclick="${product.WishListVerification ? `removeWishlist('${product._id}')` : `addWishlist('${product._id}')`}">
              <i class="bi bi-heart" style="font-size: 15px;"></i>
            </button>
                                <button class="btn btn-light btn-sm rounded-circle shadow-sm" style="width: 34px; height: 34px;">
                                    <i class="bi bi-eye" style="font-size: 15px;"></i>
                                </button>
                            </div>
                            <div class="card-body text-center" style="text-align: start;">
                                <p class="card-text text-muted mb-2" style="font-size: 14px; font-weight: 600; color: #333; margin-left: 10px;">
                                    ${product.name}
                                </p>
                                <h5 class="card-title fw-bold" style="font-size: 18px; font-weight: bold; color: #000;">₹${product.price}</h5>
                                <div class="text-warning">
                                    ${renderRatingStars(product.rating)}
                                    <button type="button" class="btn btn-danger btn-lg">Add to Cart</button>
                                </div>
                            </div>
                        </div>
                    `;
                    productList.appendChild(productItem);
                });

                // Pagination Controls
                document.getElementById('prevPage').disabled = currentPage <= 1;
                document.getElementById('nextPage').disabled = data.products.length < productsPerPage;
            })
            .catch(err => console.error(err));
    }

   
    function changePage(direction) {
        if (direction === 'prev') {
            currentPage--;
        } else if (direction === 'next') {
            currentPage++;
        }
        applyFilters();
    }

    // Function to render star ratings
    function renderRatingStars(rating) {
        let stars = '';
        for (let i = 0; i < rating; i++) {
            stars += '<i class="bi bi-star-fill"></i>';
        }
        for (let i = rating; i < 5; i++) {
            stars += '<i class="bi bi-star"></i>';
        }
        return stars;
    }

    // Function to navigate to product details page
    function productDetails(productId, category) {
        console.log("Redirecting to product details...");
        fetch(`/productdeatails/${productId}/${category}`, { method: "GET" })
            .then((response) => {
                if (response.ok) window.location.href = `/productdeatails/${productId}/${category}`;
            })
            .catch((err) => {
                console.log(err);
            });
    }

    
      function addWishlist(productId) {
    fetch(`/addwishlist/${productId}`, { method: "POST" })
        .then((response) => {
            if (!response.ok) {
                throw new Error("Failed to add product to wishlist");
            }
            return response.json(); 
        })
        .then((data) => {
            if (data.success) {
              const button = document.getElementById(`wishlist-${productId}`);
                    button.classList.remove('btn-light');
                    button.classList.add('btn-danger');
                    button.setAttribute(
                        'onclick',
                        `removeWishlist('${productId}')`
                    );
                    iziToast.success({
          title: 'Success',
          message: data.message || 'Product removed from wishlist!',
          position: 'topRight',
        });
                
            } else {
                swal({
                    title: "Error!",
                    text: data.message || "Unable to add product to wishlist.",
                    icon: "error",
                    button: "OK",
                });
            }
        })
        .catch((error) => {
            console.error("Error adding product to wishlist:", error);
            swal({
                title: "Error!",
                text: "An error occurred. Please try again later.",
                icon: "error",
                button: "OK",
            });
        });
}


function removeWishlist(productId) {
  fetch(`/removewishlis/${productId}`, { method: "POST" })
    .then((response) => {
      if (!response.ok) {
        throw new Error("Failed to remove product from wishlist");
      }
      return response.json(); 
    })
    .then((data) => {
      if (data.success) {
        const button = document.getElementById(`wishlist-${productId}`);
          button.classList.add('btn-light');
          button.setAttribute(
                        'onclick',
                        `addWishlist('${productId}')`
                    );
          iziToast.success({
          title: 'Success',
          message: data.message || 'Product removed from wishlist!',
          position: 'topRight',
        });
       
      } else {
        swal({
          title: "Error!",
          text: data.message || "Unable to remove product from wishlist.",
          icon: "error",
          button: "OK",
        });
      }
    })
    .catch((error) => {
      console.error("Error removing product from wishlist:", error);
      swal({
        title: "Error!",
        text: "An error occurred. Please try again later.",
        icon: "error",
        button: "OK",
      });
    });
}



    window.onload = applyFilters; 
</script>

<%- include('../partials/user/footer') %>
